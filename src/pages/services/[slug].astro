---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const services = await getCollection('services');
  return services.map((service) => ({
    params: { slug: service.slug },
    props: { service },
  }));
}

const { service } = Astro.props;
const { Content } = await service.render();
---

<Layout title={`${service.data.title} - A&H Solutions Services`} description={service.data.description || service.data.excerpt || service.data.title}>
  <Header />
  <main>
    <article class="pt-32 pb-16 md:pt-40 md:pb-24">
      <div class="container-custom max-w-4xl">
        <div class="mb-8">
          <a href="/services" class="inline-flex items-center text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
            </svg>
            Back to Services
          </a>
        </div>
        
        <div class="flex items-center mb-6">
          {service.data.category && (
            <>
              <span class="inline-block px-3 py-1 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-300 font-medium text-sm">
                {service.data.category}
              </span>
              <span class="mx-2 text-gray-300 dark:text-gray-600">â€¢</span>
            </>
          )}
          {service.data.pricing && service.data.pricing.startingPrice && (
            <span class="text-gray-600 dark:text-gray-400">Starting at {service.data.pricing.startingPrice}</span>
          )}
        </div>
        
        <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-6 text-gray-900 dark:text-white">{service.data.title}</h1>
        
        {service.data.excerpt && (
          <p class="text-xl text-gray-600 dark:text-gray-300 mb-8">{service.data.excerpt}</p>
        )}
        
        <div class="flex items-center mb-8">
          {service.data.author.avatar && (
            <img 
              src={service.data.author.avatar} 
              alt={service.data.author.name} 
              class="w-12 h-12 rounded-full mr-4 object-cover"
            />
          )}
          <div>
            <p class="font-semibold text-gray-900 dark:text-white">{service.data.author.name}</p>
            <p class="text-gray-600 dark:text-gray-400">Service Expert</p>
          </div>
        </div>
        
        {service.data.image && (
          <img 
            src={service.data.image} 
            alt={service.data.imageAlt || service.data.title}
            class="w-full h-auto rounded-xl mb-10 object-cover"
            style="max-height: 500px;"
          />
        )}

        <!-- Service Overview -->
        <div class="grid md:grid-cols-3 gap-8 mb-12">
          <div class="md:col-span-2">
            <div class="prose prose-lg dark:prose-invert max-w-none">
              <Content />
            </div>
          </div>
          
          <!-- Service Details Sidebar -->
          <div class="bg-gray-50 dark:bg-gray-800 p-6 rounded-xl">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Service Details</h3>
            
            {service.data.technologies && service.data.technologies.length > 0 && (
              <div class="mb-6">
                <h4 class="font-medium text-gray-900 dark:text-white mb-3">Technologies</h4>
                <div class="flex flex-wrap gap-2">
                  {service.data.technologies.map((tech) => (
                    <span class="px-3 py-1 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 text-sm rounded-full border border-gray-200 dark:border-gray-600">
                      {tech}
                    </span>
                  ))}
                </div>
              </div>
            )}
            
            {service.data.deliverables && service.data.deliverables.length > 0 && (
              <div class="mb-6">
                <h4 class="font-medium text-gray-900 dark:text-white mb-3">What You Get</h4>
                <ul class="space-y-2">
                  {service.data.deliverables.map((deliverable) => (
                    <li class="flex items-center text-sm text-gray-600 dark:text-gray-300">
                      <svg class="w-4 h-4 text-green-500 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      {deliverable}
                    </li>
                  ))}
                </ul>
              </div>
            )}
            
            {service.data.pricing && (
              <div class="mb-6">
                <h4 class="font-medium text-gray-900 dark:text-white mb-3">Pricing</h4>
                {service.data.pricing.startingPrice && (
                  <p class="text-2xl font-bold text-primary-600 dark:text-primary-400 mb-2">
                    {service.data.pricing.startingPrice}
                  </p>
                )}
                {service.data.pricing.model && (
                  <p class="text-sm text-gray-600 dark:text-gray-300 mb-3">
                    {service.data.pricing.model}
                  </p>
                )}
                {service.data.pricing.features && service.data.pricing.features.length > 0 && (
                  <ul class="space-y-1">
                    {service.data.pricing.features.map((feature) => (
                      <li class="flex items-center text-sm text-gray-600 dark:text-gray-300">
                        <svg class="w-4 h-4 text-primary-500 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        {feature}
                      </li>
                    ))}
                  </ul>
                )}
              </div>
            )}
            
            <div class="pt-4 border-t border-gray-200 dark:border-gray-700">
              <a href="/contact" class="btn-primary w-full text-center">Get Started</a>
              <a href="/case-study" class="btn-outline w-full text-center mt-3">View Examples</a>
            </div>
          </div>
        </div>

        <!-- Process Steps -->
        {service.data.processSteps && service.data.processSteps.length > 0 && (
          <div class="mb-12">
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-8 text-center">Our Process</h3>
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {service.data.processSteps.map((step, index) => (
                <div class="text-center">
                  <div class="w-12 h-12 bg-primary-600 text-white rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4">
                    {index + 1}
                  </div>
                  <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">{step.title}</h4>
                  <p class="text-gray-600 dark:text-gray-300">{step.description}</p>
                </div>
              ))}
            </div>
          </div>
        )}

        <!-- Related Domains -->
        {service.data.relatedDomains && service.data.relatedDomains.length > 0 && (
          <div class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
            <h3 class="text-xl font-semibold mb-6 text-gray-900 dark:text-white">Related Industries</h3>
            <div class="flex flex-wrap gap-2">
              {service.data.relatedDomains.map((domain) => (
                <a 
                  href={`/domains/${domain.toLowerCase().replace(/\s+/g, '-')}`} 
                  class="px-4 py-2 bg-secondary-100 dark:bg-secondary-900 text-secondary-700 dark:text-secondary-300 rounded-full hover:bg-secondary-200 dark:hover:bg-secondary-800 transition-colors"
                >
                  {domain}
                </a>
              ))}
            </div>
          </div>
        )}
      </div>
    </article>
  </main>
  <Footer />
</Layout>